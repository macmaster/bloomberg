# hadoop-metrics2-client.properties
# default configuration for jmx metrics reporting.
# jmx metrics are logged to a file sink in hdfs.
# 
# syntax: [prefix].[source|sink].[instance].[options]
# See javadoc of package-info.java for org.apache.hadoop.metrics2 for details
# 
# author: Ronald Macmaster
# date: 06/27/17


# log to a local system file.
# *.sink.file.period=2 
# *.sink.file.class=org.apache.hadoop.metrics2.sink.FileSink
# sink.file.loghome=/var/log/hadoop-metrics2
# client.sink.file.filename=${sink.file.loghome}/client.log

# upload to a graphite server.
# *.sink.graphite.period=4 
# *.sink.graphite.class=org.apache.hadoop.metrics2.sink.GraphiteSink
# client.sink.graphite.server_host=localhost
# client.sink.graphite.server_port=7877
# client.sink.graphite.metrics_prefix=client

# redirect metrics of different contexts to different sinks (in this case files)
#node.sink.file_jvm.class=org.apache.hadoop.metrics2.sink.FileSink
#client.sink.file_jvm.context=jvm
#client.sink.file_jvm.filename=nodemanager-jvm-metrics.out
#client.sink.file_mapred.class=org.apache.hadoop.metrics2.sink.FileSink
#client.sink.file_mapred.context=mapred
#client.sink.file_mapred.filename=nodemanager-mapred-metrics.out

# proposed addition to hadoop metrics2
# custom sinks override the void putMetrics(Metric Record record) method.
# handle metrics reporting on their own.
# *.sink.custom.period=5
# *.sink.custom.class=[path.to.custom.sink]

# console sink
*.sink.log.period=2
*.sink.log.class=com.bloomberg.bach.metrics.sink.LogSink
client.sink.log.level=WARN
client.sink.log.format="%n (%d): %v"
client.sink.log.prefix="\t- "

# publish to kafka stream
# configuration parameters can be found here: 
# http://kafka.apache.org/documentation/#producerconfigs
# 
# if file property is defined, kafka configuration parameters are red from the file.
# otherwise, they are sourced from their manual definition here.
#
# *.sink.kafka.period=5
# *.sink.kafka.class=com.bloomberg.bach.metrics.sink.KafkaSink
# *.sink.kafka.topic=ronny
# *.sink.kafka.file=producer.properties

# sample kafka configuration
# client.sink.kafka.bootstrap.servers=localhost:9092
# client.sink.kafka.compression.type=none
# client.sink.kafka.key.serializer=org.apache.kafka.common.serialization.StringSerializer
# client.sink.kafka.value.serializer=org.apache.kafka.common.serialization.StringSerializer
# client.sink.kafka.request.timeout.ms=500

